option(BUILD_TEST_CLIP "Build test clip.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_COLOR "Build test color.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_COMPLEX_CLIPPING "Build test complex_clipping.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_HASH_MAP "Build test hash_map.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_ONE_MILLION_BUTTONS "Build test one_million_buttons.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_SCROLLED_BOX_BOTH "Build test scrolled_box_both.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_SCROLLED_BOX_INCEPTION_CLIPPING "Build test scrolled_box_inception_clipping.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_SCROLLED_BOX_INNER "Build test scrolled_box_inner.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_SCROLLED_BOX_OUTER "Build test scrolled_box_outer.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_STRING "Build test string.cpp" ${BUILD_ALL_TESTS})
option(BUILD_TEST_TREE_TRAVERSAL "Build test tree_traversal.cpp" ${BUILD_ALL_TESTS})

set(tests "")
if(BUILD_TEST_CLIP)
	list(APPEND tests "clip.cpp")
endif()
if(BUILD_TEST_COLOR)
	list(APPEND tests "color.cpp")
endif()
if(BUILD_TEST_COMPLEX_CLIPPING)
	list(APPEND tests "complex_clipping.cpp")
endif()
if(BUILD_TEST_HASH_MAP)
	list(APPEND tests "hash_map.cpp")
endif()
if(BUILD_TEST_ONE_MILLION_BUTTONS)
	list(APPEND tests "one_million_buttons.cpp")
endif()
if(BUILD_TEST_SCROLLED_BOX_BOTH)
	list(APPEND tests "scrolled_box_both.cpp")
endif()
if(BUILD_TEST_SCROLLED_BOX_INCEPTION_CLIPPING)
	list(APPEND tests "scrolled_box_inception_clipping.cpp")
endif()
if(BUILD_TEST_SCROLLED_BOX_INNER)
	list(APPEND tests "scrolled_box_inner.cpp")
endif()
if(BUILD_TEST_SCROLLED_BOX_OUTER)
	list(APPEND tests "scrolled_box_outer.cpp")
endif()
if(BUILD_TEST_STRING)
	list(APPEND tests "string.cpp")
endif()
if(BUILD_TEST_TREE_TRAVERSAL)
	list(APPEND tests "tree_traversal.cpp")
endif()

foreach(test ${tests})
	get_filename_component(test_name ${test} NAME_WE)
	add_executable("test_${test_name}" ${test})
	set_target_properties("test_${test_name}" PROPERTIES
		RUNTIME_OUTPUT_DIRECTORY "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}/bin"
		RUNTIME_OUTPUT_DIRECTORY_DEBUG "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}/bin"
		RUNTIME_OUTPUT_DIRECTORY_RELEASE "${PROJECT_SOURCE_DIR}/${PROJECT_NAME}/bin"
	)
	target_link_libraries("test_${test_name}" ${PROJECT_NAME})
endforeach()
